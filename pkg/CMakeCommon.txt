# This file is included from pkg/*/CMakeLists.txt

set(CPACK_PACKAGE_VENDOR "Myself")
set(CPACK_PACKAGE_VERSION ${VERSION_MAJOR_MINOR_PATCH_BUILD})
set(CPACK_SYSTEM_NAME ${CMAKE_SYSTEM_PROCESSOR})  # Default includes useless "Linux-"
set(CPACK_PACKAGE_CONTACT "Me <support@example.com>")
set(CPACK_OUTPUT_FILE_PREFIX "..")  # Put in pkg dir.  CMake >= 2.8.3 only.

# We build either DEB, RPM, or PackageMaker, depending upon what
# builder executable (dpkg, rpmbuild, etc) we find.  If we find no
# builder executable, we fallback to TGZ.

# DEB (Debian, Ubuntu) packaging.
find_program(DPKG "dpkg")
if(DPKG)
    set(CPACK_GENERATOR "DEB")
    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "i686")
        set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "i386")
    elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64")
        set(CPACK_DEBIAN_PACKAGE_ARCHITECTURE "amd64")
    endif()
    set(CPACK_DEBIAN_PACKAGE_MAINTAINER "Me <support@example.com>")
    set(CPACK_DEBIAN_PACKAGE_SECTION "devel")
endif()

# RPM (Red Hat, CentOS) packaging.
find_program(RPMBUILD "rpmbuild")
if(RPMBUILD)
    set(CPACK_GENERATOR "RPM")
    if(${CMAKE_SYSTEM_PROCESSOR} MATCHES "i686")
        set(CPACK_RPM_PACKAGE_ARCHITECTURE "i686")
    elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES "x86_64")
        set(CPACK_RPM_PACKAGE_ARCHITECTURE "x86_64")
    endif()
    set(CPACK_RPM_PACKAGE_GROUP "Development/Libraries")
    set(CPACK_RPM_PACKAGE_LICENSE "BSD")
    set(CPACK_RPM_PACKAGE_DEBUG 0)
endif()

# PackageMaker (Mac OSX) packaging.
find_program(PACKAGE_MAKER "PackageMaker")
if(PACKAGE_MAKER)
    set(CPACK_GENERATOR "PackageMaker")
endif()

# tar.gz packaging fallback.
if(NOT CPACK_GENERATOR)
    set(CPACK_GENERATOR "TGZ")
endif()
